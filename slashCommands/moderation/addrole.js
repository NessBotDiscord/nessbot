const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageEmbed, Permissions } = require('discord.js');
const embedconfig = require('../../config/embeds.json');
const emoji = require('../../config/emojis.json');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('addrole')
        .setDescription('Nadaj rolÄ™ uÅ¼ytkownikowi')
        .addUserOption(option => option.setName('uÅ¼ytkownik').setDescription('Wybierz uÅ¼ytkownika ktÃ³remu chcesz nadaÄ‡ rolÄ™').setRequired(true))
        .addRoleOption(option => option.setName('rola').setDescription('Wybierz rolÄ™ ktÃ³rÄ… chcesz nadaÄ‡ uÅ¼ytkownikowi').setRequired(true))
        .addStringOption(option => option.setName('powÃ³d').setDescription('Podaj powÃ³d nadania roli').setRequired(false)),
    async execute(client, interaction) {

        const user = interaction.options.getMember('uÅ¼ytkownik');
        const role = interaction.options.getRole('rola');
        const reason = interaction.options.getString('powÃ³d') || '\`Nie podano powodu\`';

        const pEmbed = new MessageEmbed()
            .setColor(embedconfig.cerror)
            .setTitle(`${emoji['emotka.uwaga']} ãƒ» Brak permisji!`)
            .setDescription(`${emoji['emotka.brakperms']} Nie posiadasz permisji aby uÅ¼yÄ‡ tej komendy!\nPotrzebujesz permisji \`MANAGE_ROLES\``)
            .setFooter({ text: embedconfig.footer })
        
            const bpEmbed = new MessageEmbed()
            .setColor(embedconfig.cerror)
            .setTitle(`${emoji['emotka.uwaga']} ãƒ» Brak permisji!`)
            .setDescription(`${emoji['emotka.brakperms']} Bot nie posiada permisji aby wykonaÄ‡ to polecenie!\n\nPotrzebna permisja: \`MANAGE_ROLES\``)

            if (!interaction.guild.me.permissions.has(Permissions.FLAGS.MANAGE_ROLES)) {
                return interaction.reply({ embeds: [bpEmbed], ephemeral: true })
            } else if (!interaction.member.permissions.has(Permissions.FLAGS.MANAGE_ROLES)) {
                return interaction.reply({ embeds: [pEmbed], ephemeral: true })
            }

            if (user.roles.highest.position >= interaction.member.roles.highest.position) {
                const upEmbed = new MessageEmbed()
                .setColor(embedconfig.cerror)
                .setTitle(`${emoji['emotka.brakperms']} Nie mogÄ™ wykonaÄ‡ tego polecenia!`)
                .setDescription('Osoba ktÃ³rej chcesz nadaÄ‡ rolÄ™ ma takÄ… samÄ… lub wyÅ¼szÄ… rolÄ™ od Ciebie.')
                return interaction.reply({ embeds:[upEmbed], ephemeral: true })
            }

        const embed = new MessageEmbed()
            .setColor(embedconfig.cdefault)
            .setTitle(`${emoji['emotka.add']} ãƒ» Dodano rolÄ™!`)
            .setDescription(`
            ãƒ» ${emoji['emotka.person']} UÅ¼ytkownik: 
               ${emoji['emotka.reply']} ${user}
            ãƒ» ${emoji['emotka.gwiazda']} Rola:
               ${emoji['emotka.reply']} ${role}
            ãƒ» ${emoji['emotka.wiadomosc']} PowÃ³d:
               ${emoji['emotka.reply']} \`${reason}\`
        `)
            .setTimestamp();

        user.roles.add(role)
        interaction.reply({ embeds: [embed] })
    }
}

// if (!message.guild.me.permissions.has("MANAGE_ROLES")) {
//     return message.reply({ embeds: [new MessageEmbed().setColor("RED").setDescription(`>>> ${emotki.not} Bot nie ma permisji do zarzÄ…dzania rolami **(**\`ðŸ”’ MANAGE_ROLES\`**)**`)] })
// } else if (!message.member.permissions.has("MANAGE_ROLES")) {
//     return message.reply({ embeds: [new MessageEmbed().setColor("RED").setDescription(`>>> ${emotki.not} Nie posiadasz permisji do zarzÄ…dzania rolami **(**\`ðŸ”’ MANAGE_ROLES\`**)**`)] })
// }